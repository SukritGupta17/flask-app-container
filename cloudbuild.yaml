steps:

  # [START cloudbuild_python_image_yaml]
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'australia-southeast1-docker.pkg.dev/${PROJECT_ID}/simple-python-flask-app-images/flask-image:${SHORT_SHA}', '.']
  # [END cloudbuild_python_image_yaml]

  # [START cloudbuild_python_push_yaml]
  # Docker push to Google Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push',  'australia-southeast1-docker.pkg.dev/${PROJECT_ID}/simple-python-flask-app-images/flask-image:${SHORT_SHA}']
  # [END cloudbuild_python_push_yaml]

  # [START cloudbuild_python_deploy_yaml]
  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args: ['gcloud', 'run', 'deploy', 'flask-image-${SHORT_SHA}', 
           '--image=australia-southeast1-docker.pkg.dev/${PROJECT_ID}/simple-python-flask-app-images/flask-image:${SHORT_SHA}', 
           '--region', 'australia-southeast1', '--platform', 'managed', 
           '--allow-unauthenticated',
           '--add-cloudsql-instances', '${PROJECT_ID}:australia-southeast1:flask-app-test-db',
           '--set-env-vars', 'INSTANCE_CONNECTION_NAME=${PROJECT_ID}:australia-southeast1:flask-app-test-db',
           '--set-env-vars', 'DB_USER=developer',
           '--set-env-vars', 'DB_PASS=ucK+}g0F\nB121KN',
           '--set-env-vars', 'DB_NAME=test-db']
  # [END cloudbuild_python_deploy_yaml]
images:
  - australia-southeast1-docker.pkg.dev/${PROJECT_ID}/simple-python-flask-app-images/flask-image:${SHORT_SHA}
